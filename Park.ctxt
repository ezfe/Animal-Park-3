#BlueJ class context
comment0.params=width\ height\ tickEnergy\ w
comment0.target=Park(int,\ int,\ int,\ Wheel)
comment1.params=key
comment1.target=boolean\ validPoint(Point)
comment1.text=\n\ Check\ whether\ the\ passed\ point\ is\ within\ the\ bounds\ of\ the\ grid\n\ @param\ key\ point\ to\ check\n\ @return\ boolean\ whether\ or\ not\ the\ point\ is\ valid\n
comment10.params=
comment10.target=Point\ findPlantSpace()
comment10.text=\n\ Find\ a\ space\ in\ the\ grid\ for\ a\ plant\n\ @return\ point\ valid\ point\ for\ a\ plant\n
comment11.params=
comment11.target=void\ tick()
comment11.text=\n\ Tick\ the\ entire\ board\n
comment12.params=species
comment12.target=void\ logDeath(java.lang.String)
comment12.text=\n\ Log\ a\ death\ event\ of\ a\ certain\ species\n\ @param\ species\ species\ of\ organism\ that\ died\n
comment13.params=species
comment13.target=void\ logBirth(java.lang.String)
comment13.text=\n\ Log\ a\ birth\ event\ of\ a\ certain\ species\n\ @param\ species\ species\ of\ organism\ that\ was\ born\n
comment14.params=
comment14.target=void\ clearEventLog()
comment14.text=\n\ Reset\ the\ event\ log\n
comment15.params=
comment15.target=java.lang.String\ toString()
comment16.params=
comment16.target=java.lang.String\ mapString()
comment16.text=\n\ Build\ the\ map\n\ @return\ string\ the\ map\n
comment17.params=
comment17.target=java.lang.String\ deltaSummaryString()
comment17.text=\n\ Build\ the\ delta\ summary\n\ @return\ string\ delta\ summary\n
comment18.params=
comment18.target=java.lang.String\ speciesSummaryString()
comment18.text=\n\ Build\ the\ species\ summary\n\ @return\ string\ species\ summary\n
comment19.params=limit
comment19.target=boolean\ ended(int)
comment19.text=\n\ Check\ whether\ the\ simulation\ should\ halt\n\ @param\ limit\ simulation\ tick\ limit\n\ @return\ boolean\ should\ end\n
comment2.params=key
comment2.target=Cell\ getCell(Point)
comment2.text=\n\ Get\ the\ cell\ that\ occupies\ the\ passed\ point\n\ Will\ only\ return\ null\ for\ out-of-bounds\ points\n\ @param\ key\ point\ to\ fetch\n\ @return\ Cell\ that\ occupies\ that\ point\n
comment3.params=key\ p
comment3.target=void\ setPlant(Point,\ Plant)
comment3.text=\n\ Update\ the\ cell\ at\ the\ passed\ point\ with\ a\ new\ plant\n\ @param\ key\ point\ to\ set\n\ @param\ p\ plant\ to\ set\n
comment4.params=key
comment4.target=Plant\ getPlant(Point)
comment4.text=\n\ Get\ the\ plant\ at\ the\ passed\ point\n\ @param\ key\ point\ to\ get\n\ @return\ plant\ or\ null\n
comment5.params=key\ a
comment5.target=void\ setAnimal(Point,\ Animal)
comment5.text=\n\ Update\ the\ cell\ at\ the\ passedp\ oint\ with\ a\ new\ animal\n\ @param\ key\ point\ to\ set\n\ @param\ a\ animal\ to\ set\n
comment6.params=key
comment6.target=Animal\ getAnimal(Point)
comment6.text=\n\ Get\ the\ animal\ at\ the\ passed\ point\n\ @param\ key\ point\ to\ get\n\ @return\ animal\ or\ null\n
comment7.params=key
comment7.target=boolean\ hasPlant(Point)
comment7.text=\n\ Check\ whether\ the\ passed\ point\ contains\ a\ plant\n\ @param\ key\ point\ to\ check\n\ @return\ boolean\ has\ plant\n
comment8.params=key
comment8.target=boolean\ hasAnimal(Point)
comment8.text=\n\ Check\ whether\ the\ passed\ point\ contains\ an\ animal\n\ @param\ key\ point\ to\ check\n\ @return\ boolean\ has\ plant\n
comment9.params=
comment9.target=Point\ findAnimalSpace()
comment9.text=\n\ Find\ a\ space\ in\ the\ grid\ for\ an\ animal\n\ @return\ point\ valid\ point\ for\ an\ animal\n
numComments=20
